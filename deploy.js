import { ethers } from "ethers";
import fs from "fs-extra";

async function main() {
  const provider = new ethers.JsonRpcProvider("http://127.0.0.1:7545"); // ganache endpoint url
  const wallet = new ethers.Wallet(
    "0x9b9de2fe632571d33f84f899af921ac1ec50cf54425fb3102cad388fea4ebc02",
    provider
  );
  const abi = fs.readFileSync("./SimpleStorage_sol_SimpleStorage.abi", "utf8");
  const binary = fs.readFileSync(
    "./SimpleStorage_sol_SimpleStorage.bin",
    "utf8"
  );

  const contractFactory = new ethers.ContractFactory(abi, binary, wallet);

  console.log("Deploying, please wait...");
  const contract = await contractFactory.deploy(); // can pass arguments with 'deploy' such as gas price, gas limit etc
  // console.log(contract);

  console.log("this is the deployment transaction response... ");
  console.log(contract.deploymentTransaction());

  const transactionReceipt = await contract.deploymentTransaction().wait(1);
  console.log("this is Transactinon Receipt");
  console.log(transactionReceipt);

  // console.log("deploy with transacion data");
  // const nonce = await wallet.getNonce();
  // const tx = {
  //   nonce: nonce,
  //   gasPrice: 20000000000,
  //   gasLimit: 1000000,
  //   to: null,
  //   value: 0,
  //   data: "0x608060405234801561001057600080fd5b506107a2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632fae4ffd1461006757806361cb0837146100975780636f760f41146100c8578063a009491b146100e4578063b633941814610102578063f2c0a7861461011e575b600080fd5b610081600480360381019061007c91906104cf565b61013c565b60405161008e9190610531565b60405180910390f35b6100b160048036038101906100ac9190610578565b61016a565b6040516100bf92919061062d565b60405180910390f35b6100e260048036038101906100dd919061065d565b610226565b005b6100ec6102b6565b6040516100f99190610531565b60405180910390f35b61011c60048036038101906101179190610578565b6102bf565b005b6101266102c9565b6040516101339190610531565b60405180910390f35b6001818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b6002818154811061017a57600080fd5b90600052602060002090600202016000915090508060000154908060010180546101a3906106e8565b80601f01602080910402602001604051908101604052809291908181526020018280546101cf906106e8565b801561021c5780601f106101f15761010080835404028352916020019161021c565b820191906000526020600020905b8154815290600101906020018083116101ff57829003601f168201915b5050505050905082565b6002604051806040016040528083815260200184815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101908051906020019061028c9291906102d2565b505050806001836040516102a09190610755565b9081526020016040518091039020819055505050565b60008054905090565b8060008190555050565b60006096905090565b8280546102de906106e8565b90600052602060002090601f0160209004810192826103005760008555610347565b82601f1061031957805160ff1916838001178555610347565b82800160010185558215610347579182015b8281111561034657825182559160200191906001019061032b565b5b5090506103549190610358565b5090565b5b80821115610371576000816000905550600101610359565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103dc82610393565b810181811067ffffffffffffffff821117156103fb576103fa6103a4565b5b80604052505050565b600061040e610375565b905061041a82826103d3565b919050565b600067ffffffffffffffff82111561043a576104396103a4565b5b61044382610393565b9050602081019050919050565b82818337600083830152505050565b600061047261046d8461041f565b610404565b90508281526020810184848401111561048e5761048d61038e565b5b610499848285610450565b509392505050565b600082601f8301126104b6576104b5610389565b5b81356104c684826020860161045f565b91505092915050565b6000602082840312156104e5576104e461037f565b5b600082013567ffffffffffffffff81111561050357610502610384565b5b61050f848285016104a1565b91505092915050565b6000819050919050565b61052b81610518565b82525050565b60006020820190506105466000830184610522565b92915050565b61055581610518565b811461056057600080fd5b50565b6000813590506105728161054c565b92915050565b60006020828403121561058e5761058d61037f565b5b600061059c84828501610563565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105df5780820151818401526020810190506105c4565b838111156105ee576000848401525b50505050565b60006105ff826105a5565b61060981856105b0565b93506106198185602086016105c1565b61062281610393565b840191505092915050565b60006040820190506106426000830185610522565b818103602083015261065481846105f4565b90509392505050565b600080604083850312156106745761067361037f565b5b600083013567ffffffffffffffff81111561069257610691610384565b5b61069e858286016104a1565b92505060206106af85828601610563565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061070057607f821691505b602082108103610713576107126106b9565b5b50919050565b600081905092915050565b600061072f826105a5565b6107398185610719565b93506107498185602086016105c1565b80840191505092915050565b60006107618284610724565b91508190509291505056fea2646970667358221220274e85e99ce48d3d064837807d36022cc8a0e7510c76081ffb0a282ddf94e24f64736f6c634300080e0033",
  //   chainId: 1337,
  // };

  // const sentTxResponse = await wallet.sendTransaction(tx);
  // await sentTxResponse.wait(1);
  // console.log(sentTxResponse);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
